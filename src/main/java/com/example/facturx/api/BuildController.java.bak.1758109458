package com.example.facturx.api;

import com.example.facturx.model.InvoiceDTO;
import com.example.facturx.service.FacturxService;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@RestController
public class BuildController {
  private final FacturxService service;
  private final ObjectMapper om = new ObjectMapper();

  public BuildController(FacturxService service) {
    this.service = service;
  }

  @PostMapping(value = "/build-facturx", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
  public ResponseEntity<byte[]> build(
      @RequestPart("invoice_json") String invoiceJson,
      @RequestPart("source_pdf") MultipartFile sourcePdf,
      @RequestPart(value = "embedded_xml_name", required = false) String xmlName
  ) throws Exception {
    InvoiceDTO dto = om.readValue(invoiceJson, InvoiceDTO.class);
    byte[] facturx = service.buildFacturX(dto, sourcePdf.getBytes(), xmlName);
    return ResponseEntity.ok()
        .header(HttpHeaders.CONTENT_DISPOSITION,
                "inline; filename=" + (dto.invoice.number + "_FacturX.pdf"))
        .contentType(MediaType.APPLICATION_PDF)
        .body(facturx);
  }
}
